'use client';

import Button from '@/components/button';
import Input from '@/components/input';
import { PhotoIcon } from '@heroicons/react/24/solid';
import { useState } from 'react';
import { uploadProduct } from './actions';
import { useFormState } from 'react-dom';
import { useForm } from 'react-hook-form';
import { zodResolver } from '@hookform/resolvers/zod';
import { productSchema, ProductType } from './schema';
export default function AddProduct() {
  const [preview, setPreview] = useState('');
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<ProductType>({
    resolver: zodResolver(productSchema), //
  });

  const [file, setFile] = useState<File | null>(null);

  const onImageChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    // console.log(event.target.files);
    const {
      target: { files },
    } = event;
    // fileÏù¥ ÏóÜÏùÑ ÏàòÎèÑ ÏûàÍ∏∞ ÎïåÎ¨∏Ïóê ifÎ¨∏ÏùÑ Ï∂îÍ∞ÄÌïòÏó¨ ÏóÜÎäî ÏºÄÏù¥Ïä§Ïóê ÎåÄÌïú Ï≤òÎ¶¨
    if (!files) {
      return;
    }
    const file = files[0];
    const url = URL.createObjectURL(file); /// URLÏùÑ ÏÉùÏÑ±ÌïúÎã§.
    // „Ñ¥ Ïù¥Í±¥ ÏÇ¨Ïö©Ïûê Î∏åÎùºÏö∞Ï†ÄÏóêÏÑúÎßå Ï°¥Ïû¨ÌïòÍ≥†, ÌÉÄÏù∏ÏùÑ Î≥º Ïàò ÏóÜÏùå
    // „Ñ¥ URLÏùÄ ÌååÏùºÏù¥ ÏóÖÎ°úÎìú Îêú Î©îÎ™®Î¶¨Î•º Ï∞∏Ï°∞
    // Ïö∞Î¶¨Îäî input fileÎ°ú Îì±Î°ùÌïú Ïù¥ÎØ∏ÏßÄÏùò urlÏùÑ Í∞ÄÏ†∏Ïò§ÎäîÍ≤å Î™©Ìëú.
    // urlÏù¥ ÌïÑÏöîÌïú Ïù¥Ïú†Îäî Îì±Î°ùÌïú Ïù¥ÎØ∏ÏßÄÏùò ÎØ∏Î¶¨Î≥¥Í∏∞Î•º Ìï¥ Ï£ºÍ∏∞ ÏúÑÌï¥ÏÑúÏù¥Îã§.
    // console.log(url); // Ïú†Ï†ÄÍ∞Ä Î∞©Í∏à ÏóÖÎ°úÎìúÌïú ÌååÏùºÏùÑ Í∞úÎ∞úÏûêÍ∞Ä Î≥º Ïàò ÏûàÎèÑÎ°ù Ìï¥ Ï§ÄÎã§.
    // Ï¶â, ÏóÖÎ°úÎìúÌïú ÌååÏùºÏùÄ Î∏åÎùºÏö∞Ï†ÄÏùò Î©îÎ™®Î¶¨Ïóê Ï†ÄÏû•Ïù¥ ÎêòÏñ¥ÏûàÍ≥†, ÏÉàÎ°úÍ≥†Ïπ®Ìï† ÎïåÍπåÏßÄÎäî Î©îÎ™®Î¶¨Ïóê ÏÇ¥ÏïÑ ÏûàÎã§.

    setPreview(url);
    setFile(file);
  };
  // userÍ∞Ä formÏùÑ submitÌï¥ÏÑú FormÏùò actionÏù¥ Ìò∏Ï∂úÎêòÎ©¥ const interceptAction Ïù¥ Ìò∏Ï∂úÎêúÎã§.
  // const interceptAction = (state, formData) => {};
  //   const interceptAction = (_: any, formData: FormData) => {
  //     const file = formData.get('photo');
  //     if (!file) {
  //       return;
  //     }
  //     setImageId(preview);

  //     const photoUrl = `${photoId}`;
  //     formData.set('photo', photoUrl);

  //     // uploadProduct Fuctiondmf return Ìï¥ Ï£ºÎäîÍ≤å Ï§ëÏöîÌïòÎã§!
  //     return uploadProduct(_, formData); // 11.5 7:30~8:10Ï¥à Íµ¨Í∞Ñ ÎåÄ ÏΩîÎìú ÏÑ§Î™Ö

  //     //upload image to cloudflar
  //     //replace 'photo' in formData
  //     // call upload proudct(uploadProduct)
  //   };
  // const [state, action] = useFormState(interceptAction, null);

  const [state, action] = useFormState(uploadProduct, null);
  //onValidÏóê Îì§Ïñ¥Ïò§Îäî dataÎäî validationÏùÑ ÎßàÏπú Îç∞Ïù¥ÌÑ∞
  // const onValid = (data: ProductType) => {};
  // Ï¶â, onValid Ìï®ÏàòÍ∞Ä Ìò∏Ï∂úÎêúÎã§Îäî Í±¥. Îç∞Ïù¥ÌÑ∞ validationÏùÑ ÎßàÏ≥§Îã§Îäî Í≤É. react hook formÏùÄ ÏûêÎèôÏúºÎ°ú validationÎêú Îç∞Ïù¥ÌÑ∞Î•º Ïó¨Í∏∞Ïóê ÎÑ£ÏùÑ Í≤ÉÏù¥Îã§.

  // const onValid = async () => {
  //   await onSubmit()
  // };

  return (
    <div>
      <form
        // action={onValid}
        action={action}
        // onSubmit={handleSubmit(onValid)} // formÏùò validationÏù¥ ÏÑ±Í≥µÌñàÏùÑ Îïå Ìò∏Ï∂úÌï† Ìï®Ïàò(onValid)
        // üî•Ï∞∏Í≥†üî• onValidÎäî validationÏù¥ ÎÅùÎÇú Îç∞Ïù¥ÌÑ∞Î°ú Ìò∏Ï∂úÎêúÎã§.
        className='p-5 flex flex-col gap-5'
      >
        <label
          htmlFor='photo'
          className='border-2 aspect-square flex items-center justify-center flex-col text-neutral-300 border-neutral-300 rounded-md border-dashed cursor-pointer bg-center bg-cover'
          style={{
            backgroundImage: `url(${preview})`,
          }}
        >
          {preview === '' ? (
            <>
              <PhotoIcon className='w-20' />
              <div className='text-neutral-400 text-sm'>
                ÏÇ¨ÏßÑÏùÑ Ï∂îÍ∞ÄÌï¥Ï£ºÏÑ∏Ïöî.
                {/* {state?.fieldErrors.photo} */}
                {/* errors.photo?.message */}
              </div>
            </>
          ) : null}
        </label>
        <input
          onChange={onImageChange}
          type='file'
          id='photo'
          name='photo'
          accept='image/*'
          className='hidden'
        />
        <Input
          // registerÎ•º ÌÜµÌï¥ÏÑú nameÏù¥ Ï∂îÍ∞Ä Îê®Ïóê Îî∞Î•∏ name ÏÜçÏÑ± ÏÇ≠Ï†ú
          // name='title'
          required
          placeholder='Ï†úÎ™©'
          type='text'
          {...register('title')}
          // errors={state?.fieldErrors.title}
          errors={[errors.title?.message ?? '']} // react hook formÏùò  errorÎ•º Ï≤òÎ¶¨Ìïú ÏúÑÌïú ÏÑ§Í≥ÑÍ∞Ä ÏóÜÍ∏∞ ÎïåÎ¨∏Ïóê Î∞∞Ïó¥Î°ú ÎßåÎì§Í≥† Í∑∏ ÏïàÏóêÏÑú ifÎ¨∏ÏúºÎ°ú Í∞íÏùÑ Ï≤òÎ¶¨Ìï¥Ï£ºÎäî ÍººÏàòÎ•º ÏÇ¥Ïßù Ïç®Ï§ÄÎã§!
        />
        <Input
          // name='price'
          type='number'
          required
          placeholder='Í∞ÄÍ≤©'
          {...register('price')}
          // errors={state?.fieldErrors.price}
          errors={[errors.price?.message ?? '']}
        />
        <Input
          // name='description'
          type='text'
          required
          placeholder='ÏûêÏÑ∏Ìïú ÏÑ§Î™Ö'
          {...register('description')}
          // errors={state?.fieldErrors.description}
          errors={[errors.description?.message ?? '']}
        />
        <Button text='ÏûëÏÑ± ÏôÑÎ£å' />
      </form>
    </div>
  );
}
